"use strict";

const Ajv = require("ajv").default;
const schema = require("./validation_schema.json");
const { constants, debuglog, warnlog } = require("./constants");
const { ERROR_CODE } = require("./error");

exports.checkParams = (params, addRequired) => {
  if (!params) return ERROR_CODE.E0001000;

  const ajv = new Ajv({allErrors: true, strict: false});
  require("ajv-errors")(ajv);

  let required = Object.keys(params);
  if (addRequired && Array.isArray(addRequired))
    required = required.concat(addRequired);
  schema.required = [... new Set(required)];
  const validate = ajv.compile(schema);
  const valid = validate(params);

  let ret;
  if (!valid) {
    debuglog(JSON.stringify(params));
    debuglog(JSON.stringify(validate.errors));
    ret = validate.errors.sort((a, b) => {
      if (a.message > b.message) return 1;
      if (a.message < b.message) return -1;
      return 0;
    }).map((item) => `${ERROR_CODE[item.message]} (${item.message})`);
    ret = [... new Set(ret)].join("\n");
    warnlog(JSON.stringify({params: params, return: ret, errors: validate.errors}));
  }
  return ret;
}
