version: '3'
services:

  docker-lambda:
    container_name: docker-lambda
    hostname: docker-lambda
    image: lambci/lambda:nodejs12.x
    volumes:
      - ./lambda:/var/task:ro,delegated
    ports:
      - 9001:9001
    environment:
      AWS_DEFAULT_REGION: ap-northeast-1
      AWS_ACCESS_KEY_ID: 1234567890
      AWS_SECRET_ACCESS_KEY: 1234567890
      AWS_LAMBDA_FUNCTION_HANDLER: index.handler
      DOCKER_LAMBDA_WATCH: 1
      DOCKER_LAMBDA_STAY_OPEN: 1
    links:
      - docker-s3
      - docker-dynamodb
    depends_on:
      - docker-s3
      - docker-dynamodb
    networks:
      - default

  docker-s3:
    container_name: docker-s3
    hostname: docker-s3
    image: minio/minio
    volumes:
      - ./storage:/storage
    ports:
      - 9000:9000
    environment:
      MINIO_ACCESS_KEY: 1234567890
      MINIO_SECRET_KEY: 1234567890
    command: server /storage
    networks:
      - default

  docker-dynamodb:
    container_name: docker-dynamodb
    hostname: docker-dynamodb
    image: amazon/dynamodb-local
    volumes:
      - ./dynamodb:/home/dynamodblocal
    ports:
      - 8000:8000
    command: -jar DynamoDBLocal.jar -sharedDb -dbPath ./data -optimizeDbBeforeStartup
    environment:
      AWS_DEFAULT_REGION: ap-northeast-1
      AWS_ACCESS_KEY_ID: 1234567890
      AWS_SECRET_ACCESS_KEY: 1234567890
    networks:
      - default

  docker-swagger:
    container_name: docker-swagger
    hostname: docker-swagger
    image: swaggerapi/swagger-ui
    ports:
      - 8080:8080
    volumes:
      - ./umesseapi.yaml:/usr/share/nginx/html/umesseapi.yaml
    environment:
      API_URL: umesseapi.yaml
    networks:
      - default
